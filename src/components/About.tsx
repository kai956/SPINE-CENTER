'use client';

import React, { useState, useRef, useEffect } from 'react';
import Image from 'next/image';
import gsap from 'gsap';
import ScrollTrigger from 'gsap/dist/ScrollTrigger';
import SplitType from 'split-type';
import { motion } from 'framer-motion';

gsap.registerPlugin(ScrollTrigger);

interface AboutItem {
  id: number;
  title: string;
  content: string;
  emoji: string;
}

const aboutData: AboutItem[] = [
  {
    id: 1,
    title: '–®–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥',
    content: '–ö –Ω–∞–º –æ–±—Ä–∞—â–∞—é—Ç—Å—è —Å —à–∏—Ä–æ–∫–∏–º —Å–ø–µ–∫—Ç—Ä–æ–º –∂–∞–ª–æ–± –∏ –¥–∏–∞–≥–Ω–æ–∑–æ–≤, –æ—Ç –±–µ–∑–æ–±–∏–¥–Ω–æ–≥–æ –æ—Å—Ç–µ–æ—Ö–æ–Ω–¥—Ä–æ–∑–∞ –¥–æ –≥—Ä—ã–∂–∏ –ú–ü–î –∏ —Å–∫–æ–ª–∏–æ–∑–∞ 1-4 —Å—Ç–µ–ø–µ–Ω–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ç–∏–ø–∞, –∏ –∑–∞ –∫–æ—Ä–æ—Ç–∫–∏–π —Å—Ä–æ–∫ –æ–±—Ä–µ—Ç–∞—é—Ç –Ω–æ–≤—ã–µ —Å–∏–ª—ã –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∂–∏–∑–Ω–∏',
    emoji: 'üè•'
  },
  {
    id: 2,
    title: '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–µ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ',
    content: '–ú–µ—Ç–æ–¥–∏–∫–∞ –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ä—ã–Ω–∫–µ –∑–∞–≤–æ–µ–≤–∞–ª–∞ –¥–æ–≤–µ—Ä–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω—É—é –æ—Ü–µ–Ω–∫—É –º–Ω–æ–≥–∏—Ö –¥–µ—è—Ç–µ–ª–µ–π –º–µ–¥–∏—Ü–∏–Ω—ã –†–§, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ –∏ –¥—Ä —Å—Ç—Ä–∞–Ω',
    emoji: 'üåç'
  },
  {
    id: 3,
    title: '–ù–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
    content: '–ö–æ–º–ø–∞–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–Ω–æ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ –Ω–∞—à–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ —Å–æ–±—Ä–∞–Ω–Ω–æ–º—É —Ä—É–∫–æ–≤–æ–¥—è—â–µ–º—É —Å–æ—Å—Ç–∞–≤—É. –ó–∞ –≤—Ä–µ–º—è —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏ –º—ã –æ–∑–¥–æ—Ä–æ–≤–∏–ª–∏ –±–æ–ª–µ–µ 8 —Ç—ã—Å—è—á —á–µ–ª–æ–≤–µ–∫!',
    emoji: 'üèÜ'
  }
];

export default function About() {
  const [activeId, setActiveId] = useState<number>(1);
  const contentRefs = useRef<(HTMLDivElement | null)[]>([]);

  const handleItemClick = (id: number) => {
    setActiveId(id);
  };

  const activeItem = aboutData.find(item => item.id === activeId) || aboutData[0];

  return (
    <section 
      className="relative min-h-screen py-32 overflow-hidden"
      data-scroll-section
    >
      <div className="container mx-auto px-4 relative z-10">
        <div className="grid md:grid-cols-2 gap-12 items-center">
          {/* Left side - Emoji Display */}
          <div 
            className="relative h-[500px] md:h-[700px] rounded-lg overflow-hidden bg-gradient-to-br from-blue-50 to-purple-50"
            data-scroll
            data-scroll-speed="1"
          >
            <div className="absolute inset-0 flex items-center justify-center">
              <motion.span 
                key={activeItem.id}
                initial={{ scale: 0.5, opacity: 0 }}
                animate={{ scale: 1, opacity: 1 }}
                exit={{ scale: 0.5, opacity: 0 }}
                transition={{ duration: 0.3 }}
                className="text-9xl"
              >
                {activeItem.emoji}
              </motion.span>
            </div>
          </div>

          {/* Content Section */}
          <div className="h-full flex flex-col relative z-20">
            <motion.h2 
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ 
                once: true,
                amount: 0.3,
                margin: "-100px"
              }}
              transition={{ 
                duration: 0.8,
                ease: "easeOut"
              }}
              className="text-5xl font-light text-gray-900 mb-16"
              data-scroll
              data-scroll-speed="0.5"
            >
              –û –∫–æ–º–ø–∞–Ω–∏–∏
            </motion.h2>
            
            <div className="space-y-0 flex-grow">
              {aboutData.map((item) => (
                <div key={item.id} className="border-t border-blue-200/50">
                  <button
                    onClick={() => handleItemClick(item.id)}
                    className="w-full py-8 text-left flex justify-between items-center group"
                  >
                    <span className={`text-2xl font-light tracking-wide transition-colors duration-300
                      ${activeId === item.id ? 'text-blue-600' : 'text-gray-800 group-hover:text-blue-600'}`}>
                      {item.title}
                    </span>
                    <span className={`text-2xl transform transition-transform duration-300 text-blue-600
                      ${activeId === item.id ? 'rotate-180' : ''}`}>
                      ‚Üì
                    </span>
                  </button>
                  <motion.div
                    initial={false}
                    animate={{ 
                      height: activeId === item.id ? 'auto' : 0,
                      opacity: activeId === item.id ? 1 : 0
                    }}
                    transition={{ duration: 0.3 }}
                    className="overflow-hidden"
                  >
                    <p className="pb-8 text-lg text-gray-600 leading-relaxed font-light tracking-wide">
                      {item.content}
                    </p>
                  </motion.div>
                </div>
              ))}
              <div className="border-t border-blue-200/50" />
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}